#!/usr/bin/env bash
# manages manage_my_process

PROCESS=manage_my_process
PIDFILE=/var/run/my_process.pid
start_action() {
    start-stop-daemon -S -a \/bin/bash -- -c exec $PROCESS -b --pid-file $PIDFILE
}
stop_action() {
    start-stop-daemon -K -n $PROCESS --remove-pidfile
}

case "$1" in
start)
    start_action
    echo "manage_my_process started"
    ;;

stop)
    stop_action
    echo "manage_my_process stopped"
    ;;

restart)
    stop_action
    start_action
    echo "manage_my_process restarted"
    ;;

*)
    echo "Usage: manage_my_process {start|stop|restart}"
    ;;
esac


# case "$1" in
# 	start)
# 	# starts manage_my_process in the background		
# 	./manage_my_process &
# 	# creates /var/run/my_process.pid with its PID inside
# 	echo $$>/var/run/my_process.pid
# 	# then display manage_my_process started
# 	echo "manage_my_process started"
# 	;;
	
# 	stop)
# 	# kill manage_my_process	
# 	pkill -f ./manage_my_process
# 	# delete /var/run/my_process.pid with force option and sudo to make sure itâ€™s deleted
# 	sudo rm /var/run/my_process.pid
# 	# then display it has been stopped
# 	echo "manage_my_process stopped"
# 	;;
	
# 	restart)
# 	# stops manage_my_process
# 	pkill -f ./manage_my_process
# 	# deletes /var/run/my_process.pid
# 	sudo rm /var/run/my_process.pid
# 	# starts manage_my_process : start and stop should be refactored to functions
# 	./manage_my_process &
# 	# creates /var/run/my_process.pid with its PID inside
#         echo $$>/var/run/my_process.pid
# 	echo "manage_my_process restarted"
#         ;; 

# 	*)
# 	echo "Usage: manage_my_process {start|stop|restart}"
# esac

	

